import java_cup.runtime.*;
import java.util.Stack;

parser code {:
	public static void main(String args[]) throws Exception {
		new parser(new Yylex(System.in)).parse();
	}
	
	public void syntax_error(Symbol s) {
    	System.out.println("compiler has detected a syntax error at line " + getLine() + " column " + getColumn());
		System.out.println(getText());
	}

	public int getLine() {
		return ((Yylex) getScanner()).getLine();
	}

	public int getColumn() {
		return ((Yylex) getScanner()).getColumn();
	}
	
	public String getText() {
		return ((Yylex) getScanner()).getText();
	}
:}

action code {:
	Writer writer = new Writer("CMaisonUser.java");
:}

terminal PROGRAMME_DOMUS_OPEN_TAG, PROGRAMME_DOMUS_CLOSE_TAG,
 DECLARATION_APPAREILS_OPEN_TAG, DECLARATION_APPAREILS_CLOSE_TAG,
 DECLARATION_INTERFACE_OPEN_TAG, DECLARATION_INTERFACE_CLOSE_TAG,
 DECLARATION_SCENARII_OPEN_TAG, DECLARATION_SCENARII_CLOSE_TAG,
 DECLARATION_COMMANDES_OPEN_TAG, DECLARATION_COMMANDES_CLOSE_TAG,
 
 DEFINIR, EXECUTOR_SCENARIO, ASSOCIER, PROGRAMMER, MESSAGE, POURTOUT,
 FAIRE, FAIT, SI, ALORS, SINON, FSI, OUVRIR, FERMER, ETEINDRE, ALLUMER,
 TAMISER, ETAT, ALLUMER_PARTIEL, ALLUMER_ECO, OUVRIR_PARTIEL, ALLUME, ETEINT,
 DEMI, ECO, OUVERT, FERME, TABLETTE, TV, HIFI, CAFETIERE, VIDEO_PROJ,
 LAVE_VAISSELLE, LAVE_LINGE, SECHE_LINGE, ORDINATEUR, PORTAIL,

 DOT, COMMA, COLON, ASSIGN, SEMI_COLON, CURLY_BRACKET_OPEN, CURLY_BRACKET_CLOSE, EQUALS, PARANTHESES_OPEN, PARANTHESES_CLOSE;

terminal String SCENARIO_OPEN_TAG,SCENARIO_CLOSE_TAG, IDENTIFIER, LINE_COMMENT, BLOCK_COMMENT, STRING_LITERAL, DATE;
// appareils
terminal String ECLAIRAGE, VOLET, CHAUFFAGE, ALARME, FENETRE, AUTRE_APPAREIL;
// interface
terminal String INTERRUPTEUR, MOBILE, TELEPHONE, TELECOMMANDE;

non terminal expr, list, item, subitem;
non terminal pourtout_subitem, pourtout_action, si_subitem, message_subitem, programmer_subset;
non terminal appareils, autre_appareils, interfaces, actions, states;

expr ::= list {:
	System.out.println("\n\nAnalyse terminee!");
:} | {: System.out.println("Entree vide!"); :};

list ::= item list | item;

// COMMENTS
item ::= LINE_COMMENT:s {: writer.appendln(s); :};
item ::= BLOCK_COMMENT:s {: writer.appendln(s); :};

// TAGS
item ::= PROGRAMME_DOMUS_OPEN_TAG:s {: writer.createFile(); :};
item ::= PROGRAMME_DOMUS_CLOSE_TAG:s {: :};

item ::= DECLARATION_APPAREILS_OPEN_TAG:s {: :};
item ::= DECLARATION_APPAREILS_CLOSE_TAG:s {: :};

item ::= DECLARATION_INTERFACE_OPEN_TAG:s {: :};
item ::= DECLARATION_INTERFACE_CLOSE_TAG:s {: :};

item ::= DECLARATION_SCENARII_OPEN_TAG:s {: :};
item ::= DECLARATION_SCENARII_CLOSE_TAG:s {: :};

item ::= SCENARIO_OPEN_TAG:s {: :};
item ::= SCENARIO_CLOSE_TAG:s {: :};

item ::= DECLARATION_COMMANDES_OPEN_TAG:s {: :};
item ::= DECLARATION_COMMANDES_CLOSE_TAG:s {: :};

appareils ::= 
	  ECLAIRAGE:a {: RESULT = a; :} 
	| VOLET:a {: RESULT = a; :}
	| CHAUFFAGE:a {: RESULT = a; :}
	| ALARME:a {: RESULT = a; :}
	| FENETRE:a {: RESULT = a; :};

autre_appareils ::= 
	  CAFETIERE:ap {: RESULT = "cafe"; :}
	| HIFI:ap {: RESULT = "hifi"; :};

interfaces ::= 
	  INTERRUPTEUR:i {: RESULT = i; :}
	| MOBILE:i {: RESULT = i; :}
	| TELEPHONE:i {: RESULT = i; :}
	| TELECOMMANDE:i {: RESULT = i; :};

actions ::=
      OUVRIR:a {: RESULT = a; :}
	| FERMER:a {: RESULT = a; :} 
	| ETEINDRE:a {: RESULT = a; :} 
	| ALLUMER :a {: RESULT = a; :}
	| TAMISER:a {: RESULT = a; :}
	| ALLUMER_PARTIEL:a {: RESULT = a; :}
	| ALLUMER_ECO:a {: RESULT = a; :}
	| OUVRIR_PARTIEL:a {: RESULT = a; :};

states ::=
	  ALLUME :s {: RESULT = s; :}
	| ETEINT:s {: RESULT = s; :}
	| DEMI:s {: RESULT = s; :}
	| ECO:s {: RESULT = s; :}
	| OUVERT:s {: RESULT = s; :}
	| FERME:s {: RESULT = s; :};

subitem ::=
	  COMMA IDENTIFIER:identifier subitem:a
	  {:
		RESULT = identifier;
	  :}
	| CURLY_BRACKET_CLOSE DOT {::}
	| DOT {::};

pourtout_subitem ::=
	  appareils:a {::}
	| IDENTIFIER:a {::} 
	| AUTRE_APPAREIL {::}
	| AUTRE_APPAREIL PARANTHESES_OPEN autre_appareils:ap PARANTHESES_CLOSE {::};

pourtout_action ::=
	  IDENTIFIER:id2 DOT actions:app_action
	| MESSAGE PARANTHESES_OPEN message_subitem PARANTHESES_CLOSE {::};

si_subitem ::=
	  IDENTIFIER:id DOT actions:app_action {::}
	| MESSAGE PARANTHESES_OPEN message_subitem PARANTHESES_CLOSE {::};

message_subitem ::=
	  STRING_LITERAL:s {::}
	| STRING_LITERAL:s COMMA IDENTIFIER:id message_subitem {::}
	| STRING_LITERAL:s COMMA IDENTIFIER:id DOT ETAT message_subitem {::}
	| {::};

programmer_subset ::=
	  DATE {::}
	| CURLY_BRACKET_OPEN DATE COMMA programmer_subset CURLY_BRACKET_CLOSE {::}
	| {::};

item ::= appareils:a IDENTIFIER:identifier subitem:si {:
	// TODO Update class name for VOLET to FENETRE
	String appareils = (String) a;
	String className = "C" + appareils.substring(0, 1).toUpperCase() + appareils.substring(1);
	writer.appendln(className + " " + identifier + " = new " + className + "(\"" + identifier + "\", TypeAppareil." + appareils.toUpperCase() + ");");
	writer.appendln("ma_liste_appareils.add(" + identifier + ");");
:};

item ::= AUTRE_APPAREIL PARANTHESES_OPEN autre_appareils:ap PARANTHESES_CLOSE IDENTIFIER:identifier subitem:si {:
	String appareils = (String) ap;
	writer.appendln("CAutreAppareil " + identifier + " = new CAutreAppareil(\"" + identifier + "\", TypeAppareil.AUTRE_APPAREIL_" + appareils.toUpperCase() + ");");
	writer.appendln("ma_liste_appareils.add(" + identifier + ");");
:};


item::= DEFINIR IDENTIFIER:identifier1 ASSIGN CURLY_BRACKET_OPEN IDENTIFIER:identifier2 subitem:si {:
	writer.appendln("CEnsAppareil " + identifier1 + " = new CAutreAppareil(\"" + identifier1 + "\");");
	writer.appendln(identifier1 + ".add(" + identifier2 + ");");
	writer.appendln("ma_liste_ens_appareils.add(" + identifier1 + ");");
:};

item ::= interfaces:i IDENTIFIER:identifier subitem:si {:
	String interfaceName = (String) i;
	writer.appendln("CInterface " + identifier + " = new CInterface(\"" + identifier + "\", TypeInterface." + interfaceName.toUpperCase() + ");");
	writer.appendln("ma_liste_interfaces.add(" + identifier + ");");
:};


item ::= POURTOUT IDENTIFIER:id1 COLON pourtout_subitem FAIRE pourtout_action SEMI_COLON FAIT SEMI_COLON {::};

item ::= IDENTIFIER:id DOT actions:app_action SEMI_COLON {::};
// TO BE UPDATED THIS PART
item ::= SI PARANTHESES_OPEN item EQUALS states:state PARANTHESES_CLOSE ALORS si_subitem SEMI_COLON {::};
item ::= SINON IDENTIFIER:id DOT actions:app_action SEMI_COLON FSI SEMI_COLON {::};

item ::= IDENTIFIER:id DOT ETAT {::};
item ::= IDENTIFIER:id DOT states:app_state SEMI_COLON {::};
item ::= FSI SEMI_COLON {::};

item ::= EXECUTOR_SCENARIO IDENTIFIER:id SEMI_COLON {::};

item ::= MESSAGE PARANTHESES_OPEN message_subitem PARANTHESES_CLOSE SEMI_COLON {::};

item ::= ASSOCIER IDENTIFIER:id ASSIGN IDENTIFIER:id2 DOT {::};
item ::= PROGRAMMER IDENTIFIER:id ASSIGN programmer_subset DOT {::};

